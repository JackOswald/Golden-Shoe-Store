{"ast":null,"code":"import _defineProperty from \"E:\\\\Jack\\\\Documents\\\\Programming\\\\game-store\\\\Video-Game-Store\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\Jack\\\\Documents\\\\Programming\\\\game-store\\\\Video-Game-Store\\\\src\\\\context.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport { storeProducts, detailProduct } from \"./data\"; // Creating a provider and consumer for the information\n\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProduct: detailProduct,\n      cart: [],\n      modalOpen: false,\n      modalProduct: detailProduct,\n      cartVAT: 0,\n      cartTotal: 0\n    };\n\n    this.setProducts = () => {\n      let tempProducts = [];\n      storeProducts.forEach(item => {\n        const singleItem = _objectSpread({}, item);\n\n        tempProducts = [...tempProducts, singleItem];\n      });\n      this.setState(() => {\n        return {\n          products: tempProducts\n        };\n      });\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handleDetail = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      let tempProducts = [...this.state.products];\n      const index = tempProducts.indexOf(this.getItem(id));\n      const product = tempProducts[index];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.price;\n      product.total = price;\n      this.setState(() => {\n        return {\n          products: tempProducts,\n          cart: [...this.state.cart, product]\n        };\n      }, () => {\n        console.log(this.state);\n      });\n    };\n\n    this.openModal = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n\n    this.increment = id => {\n      console.log(\"This is increment method\");\n    };\n\n    this.decrement = id => {\n      console.log(\"This is decrement method\");\n    };\n\n    this.removeItem = id => {\n      console.log(\"Item has been removed\");\n    };\n\n    this.clearCart = id => {\n      console.log(\"Clear cart method\");\n    };\n\n    this.addTotals = () => {\n      let subTotal = 0;\n      this.state.cart.map(item => subTotal += item.total);\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  } // Obtain copy of values from data.js\n\n\n  render() {\n    return React.createElement(ProductContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        openModal: this.openModal,\n        closeModal: this.closeModal,\n        increment: this.increment,\n        decrement: this.decrement,\n        removeItem: this.removeItem,\n        clearCart: this.clearCart\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["E:/Jack/Documents/Programming/game-store/Video-Game-Store/src/context.js"],"names":["React","Component","storeProducts","detailProduct","ProductContext","createContext","ProductProvider","state","products","cart","modalOpen","modalProduct","cartVAT","cartTotal","setProducts","tempProducts","forEach","item","singleItem","setState","getItem","id","product","find","handleDetail","addToCart","index","indexOf","inCart","count","price","total","console","log","openModal","closeModal","increment","decrement","removeItem","clearCart","addTotals","subTotal","map","componentDidMount","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { storeProducts, detailProduct } from \"./data\";\r\n\r\n// Creating a provider and consumer for the information\r\nconst ProductContext = React.createContext();\r\n\r\nclass ProductProvider extends Component {\r\n  state = {\r\n    products: [],\r\n    detailProduct: detailProduct,\r\n    cart: [],\r\n    modalOpen: false,\r\n    modalProduct: detailProduct,\r\n    cartVAT: 0,\r\n    cartTotal: 0\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setProducts();\r\n  }\r\n\r\n  // Obtain copy of values from data.js\r\n  setProducts = () => {\r\n    let tempProducts = [];\r\n    storeProducts.forEach(item => {\r\n      const singleItem = { ...item };\r\n      tempProducts = [...tempProducts, singleItem];\r\n    });\r\n    this.setState(() => {\r\n      return { products: tempProducts };\r\n    });\r\n  };\r\n\r\n  // Get the id values of item\r\n  getItem = id => {\r\n    const product = this.state.products.find(item => item.id === id);\r\n    return product;\r\n  };\r\n\r\n  // Set the template product to our current product\r\n  handleDetail = id => {\r\n    const product = this.getItem(id);\r\n    this.setState(() => {\r\n      return { detailProduct: product };\r\n    });\r\n  };\r\n\r\n  // Add the specific object to cart using id\r\n  addToCart = id => {\r\n    let tempProducts = [...this.state.products];\r\n    const index = tempProducts.indexOf(this.getItem(id));\r\n    const product = tempProducts[index];\r\n    product.inCart = true;\r\n    product.count = 1;\r\n    const price = product.price;\r\n    product.total = price;\r\n    this.setState(\r\n      () => {\r\n        return { products: tempProducts, cart: [...this.state.cart, product] };\r\n      },\r\n      () => {\r\n        console.log(this.state);\r\n      }\r\n    );\r\n  };\r\n\r\n  // Open modal when clicked on image\r\n  openModal = id => {\r\n    const product = this.getItem(id);\r\n    this.setState(() => {\r\n      return { modalProduct: product, modalOpen: true };\r\n    });\r\n  };\r\n\r\n  // Close modal when clicked back or checkout\r\n  closeModal = () => {\r\n    this.setState(() => {\r\n      return { modalOpen: false };\r\n    });\r\n  };\r\n\r\n  increment = id => {\r\n    console.log(\"This is increment method\");\r\n  };\r\n\r\n  decrement = id => {\r\n    console.log(\"This is decrement method\");\r\n  };\r\n\r\n  removeItem = id => {\r\n    console.log(\"Item has been removed\");\r\n  };\r\n\r\n  clearCart = id => {\r\n    console.log(\"Clear cart method\");\r\n  };\r\n\r\n  addTotals = () =>{\r\n    let subTotal = 0;\r\n    this.state.cart.map(item => (subTotal += item.total))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ProductContext.Provider\r\n        value={{\r\n          ...this.state,\r\n          handleDetail: this.handleDetail,\r\n          addToCart: this.addToCart,\r\n          openModal: this.openModal,\r\n          closeModal: this.closeModal,\r\n          increment: this.increment,\r\n          decrement: this.decrement,\r\n          removeItem: this.removeItem,\r\n          clearCart: this.clearCart\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </ProductContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nconst ProductConsumer = ProductContext.Consumer;\r\n\r\nexport { ProductProvider, ProductConsumer };\r\n"]},"metadata":{},"sourceType":"module"}